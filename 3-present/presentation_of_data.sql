

--------
if OBJECT_ID('TITLES_STATISTIC') IS NOT NULL
DROP view TITLES_STATISTIC


GO
create view TITLES_STATISTIC AS
SELECT TITLES.NAME, NUMBER_PLAYERS.PLAYERS, NUMBER_WINNERS.N_W AS 'êîëè÷åñòâî ïðèçîâûõ ìåñò',
 Aver_Place.AV_PL as 'ñðåäíåå ìåñòî'
FROM TITLES 
INNER JOIN
(
SELECT TITLES.TITLE_ID AS TITLE,  COUNT(PLAYERS.PLAYER_ID) AS PLAYERS
FROM PLAYERS,TITLES
WHERE PLAYERS.TITLE_ID = TITLES.TITLE_ID
GROUP BY TITLES.TITLE_ID
)AS NUMBER_PLAYERS
ON TITLES.TITLE_ID = NUMBER_PLAYERS.TITLE
INNER JOIN

(
SELECT TITLES.TITLE_ID AS TITLE, COUNT(PARTICIPATIONS.PLAYER_ID) AS N_W
FROM PLAYERS,TITLES,PARTICIPATIONS,TOURMAMENTS
WHERE PLAYERS.TITLE_ID = TITLES.TITLE_ID AND 
PARTICIPATIONS.PLAYER_ID = PLAYERS.PLAYER_ID AND
PARTICIPATIONS.PLACE IN (1,2,3) AND 
TOURMAMENTS.TOURMAMENT_ID=PARTICIPATIONS.TOURMAMENT_ID AND
TOURMAMENTS.DATE_START >='2000-01-01'
GROUP BY TITLES.TITLE_ID
)AS NUMBER_WINNERS
ON  TITLES.TITLE_ID = NUMBER_WINNERS.TITLE
INNER JOIN
(
SELECT TITLES.TITLE_ID AS TITLE, AVG(PARTICIPATIONS.PLACE) AS AV_PL
FROM PLAYERS,TITLES,PARTICIPATIONS,TOURMAMENTS
WHERE PLAYERS.TITLE_ID = TITLES.TITLE_ID AND 
PARTICIPATIONS.PLAYER_ID = PLAYERS.PLAYER_ID and
TOURMAMENTS.TOURMAMENT_ID=PARTICIPATIONS.TOURMAMENT_ID AND
TOURMAMENTS.DATE_START >='2000-01-01'
GROUP BY TITLES.TITLE_ID
)AS Aver_Place
ON TITLES.TITLE_ID=Aver_Place.TITLE
WITH CHECK OPTION
GO



SELECT * FROM TITLES_STATISTIC

-------------------









 -----------
 if OBJECT_ID('Countries_statistics') IS NOT NULL
 DROP VIEW Countries_statistics
 

 GO
create view Countries_statistics as
SELECT  COUNTRIES.SHORT_NAME AS 'Ñòðàíà',	
		isnull(NUMBER_PLAYERS.NUM_PL,0) AS 'êîëè÷åñòâî øàõìàòèñòîâ', 
		isnull(NUMBER_WINNERS.NUM_WIN,0) AS 'êîëè÷åñòâî ïîáåä'
FROM
COUNTRIES 

INNER JOIN

(SELECT COUNTRIES.COUNTRY_ID AS C, COUNT(PLAYERS.PLAYER_ID) AS NUM_PL
FROM  PLAYERS, COUNTRIES, PARTICIPATIONS
WHERE PLAYERS.COUTRY_ID=COUNTRIES.COUNTRY_ID AND
PLAYERS.PLAYER_ID=PARTICIPATIONS.PLAYER_ID
GROUP BY  COUNTRIES.COUNTRY_ID
) AS NUMBER_PLAYERS
ON COUNTRIES.COUNTRY_ID=NUMBER_PLAYERS.C

LEFT JOIN 

(SELECT COUNTRIES.COUNTRY_ID AS C, COUNT(PARTICIPATIONS.PLACE) AS NUM_WIN
FROM  PLAYERS, COUNTRIES,PARTICIPATIONS
WHERE PLAYERS.COUTRY_ID=COUNTRIES.COUNTRY_ID AND
PLAYERS.PLAYER_ID= PARTICIPATIONS.PLAYER_ID and 
PARTICIPATIONS.PLACE IN(1,2,3)
GROUP BY COUNTRIES.COUNTRY_ID
) AS NUMBER_WINNERS
ON NUMBER_WINNERS.C=COUNTRIES.COUNTRY_ID

GO


SELECT * FROM Countries_statistics
---------------------------------------------------




 if OBJECT_ID('chess_player_statistics') IS NOT NULL
 DROP VIEW chess_player_statistics
 
 go
 create view chess_player_statistics as
 select PLAYERS.NAME as 'Øàõìàòèñò',PLAYERS.RATING as 'ðåéòèíã', AV_PL.AVP as 'ñðåäíåå ìåñòî'
 from  PLAYERS
 INNER JOIN
 (select  PLAYERS.PLAYER_ID,AVG(PARTICIPATIONS.PLACE) AS AVP
 from  PLAYERS, PARTICIPATIONS
 WHERE PLAYERS.PLAYER_ID=PARTICIPATIONS.PLAYER_ID
 GROUP BY PLAYERS.PLAYER_ID
 )AS AV_PL
 ON PLAYERS.PLAYER_ID=AV_PL.PLAYER_ID
 WITH CHECK OPTION
 go
 SELECT * FROM chess_player_statistics
  ------------------------------------------


 
  if OBJECT_ID('city_statistics') IS NOT NULL
 DROP VIEW city_statistics
 
 go
 create view city_statistics as
 SELECT LOCATIONS.CITY_NAME AS 'Ãîðîä',YEAR(TOURMAMENTS.DATE_START)AS 'ÃÎÄ',
 PLAYERS.NAME AS 'øàõìàòèñò', TITLES.NAME AS 'çâàíèå'
 FROM LOCATIONS, TOURMAMENTS ,PLAYERS, TITLES, PARTICIPATIONS
 WHERE LOCATIONS.PLACE_ID=TOURMAMENTS.LOCATION_ID AND
 TOURMAMENTS.TOURMAMENT_ID=PARTICIPATIONS.TOURMAMENT_ID AND
 PARTICIPATIONS.PLAYER_ID=PLAYERS.PLAYER_ID AND
 PLAYERS.TITLE_ID = TITLES.TITLE_ID AND
 PARTICIPATIONS.PLACE IN(1,2,3)
 WITH CHECK OPTION
 GO

 SELECT * FROM city_statistics


 ----------------------------------

  


    if OBJECT_ID('opening_STATISTICS') IS NOT NULL
 DROP VIEW opening_STATISTICS
 GO
CREATE VIEW opening_STATISTICS AS
 SELECT characteristics_values.characteristic_value AS 'ÂÈÄ ÃÀÌÁÈÒÀ',
 COUNT(GAMES.GAME_ID) AS '×ÈÑËÎ ÏÀÐÒÈÉ',COUNT(PARTICIPATIONS.PLAYER_ID) AS '×ÈÑËÎ øàõìàòèñòîâ'
 FROM GAMES,GAME_DESCRIPTION, characteristics_values,game_characteristics,PARTICIPATIONS
 WHERE GAMES.GAME_ID=GAME_DESCRIPTION.GAME_Id AND
 GAME_DESCRIPTION.GAME_characteristic_ID=game_characteristics.game_characteristics_id AND
 game_characteristics.game_characteristic_name='opening' and
 GAME_DESCRIPTION.characteristic_value_id=characteristics_values.characteristics_value_id AND
 characteristics_values.characteristics_value_id!=1  AND

 PARTICIPATIONS.TOURMAMENT_ID=GAMES.TOURMAMENT_ID AND 
 (PARTICIPATIONS.PLAYER_ID = GAMES.PLAYER_WHITE_ID OR PARTICIPATIONS.PLAYER_ID = GAMES.PLAYER_BLACK_ID)
 GROUP BY characteristics_values.characteristics_value_id,characteristics_values.characteristic_value
 WITH CHECK OPTION
 GO

 SELECT * FROM opening_STATISTICS
 -------------------------------------






 
 
 
 if OBJECT_ID('GAMES_STATISTICS') IS NOT NULL
 DROP VIEW GAMES_STATISTICS
 
 GO
  CREATE VIEW GAMES_STATISTICS AS
 SELECT PLAYERS.NAME AS 'ÈÃÐÎÊ', NUM_GAM.NUM  AS '×ÈÑËÎ ÏÀÐÒÈÉ' ,NUM_WINS.NW AS '×ÈÑËÎ ÏÎÁÅÄ'
 FROM PLAYERS,
 (
  SELECT PLAYERS.PLAYER_ID AS PL,COUNT(GAMES.GAME_ID)AS NUM
 FROM PLAYERS,PARTICIPATIONS,GAMES
 WHERE PLAYERS.PLAYER_ID=PARTICIPATIONS.PLAYER_ID AND
 PARTICIPATIONS.TOURMAMENT_ID=GAMES.TOURMAMENT_ID AND
 (PARTICIPATIONS.PLAYER_ID=GAMES.PLAYER_BLACK_ID OR
  PARTICIPATIONS.PLAYER_ID=GAMES.PLAYER_WHITE_ID) 
  GROUP BY PLAYERS.PLAYER_ID
 ) AS NUM_GAM,
 (
SELECT PLAYERS.PLAYER_ID AS PL,COUNT(GAMES.GAME_ID)AS NW
 FROM PLAYERS,PARTICIPATIONS,GAMES
 WHERE PLAYERS.PLAYER_ID=PARTICIPATIONS.PLAYER_ID AND
 PARTICIPATIONS.TOURMAMENT_ID=GAMES.TOURMAMENT_ID AND
 PARTICIPATIONS.PLAYER_ID=GAMES.PLAYER_BLACK_ID AND
 GAMES.RESULT_FOR_WHITE=0
 OR
  PARTICIPATIONS.PLAYER_ID=GAMES.PLAYER_WHITE_ID AND 
  PLAYERS.PLAYER_ID=PARTICIPATIONS.PLAYER_ID AND
 PARTICIPATIONS.TOURMAMENT_ID=GAMES.TOURMAMENT_ID AND
 GAMES.RESULT_FOR_WHITE=1
  
  GROUP BY PLAYERS.PLAYER_ID
 ) AS NUM_WINS

 WHERE PLAYERS.PLAYER_ID=NUM_GAM.PL AND
 PLAYERS.PLAYER_ID=NUM_WINS.PL
 WITH CHECK OPTION
 GO
 
 SELECT * FROM GAMES_STATISTICS
 -------------------------------------





 if OBJECT_ID('CLUBS_STATISTICS') IS NOT NULL
 DROP VIEW CLUBS_STATISTICS 

  GO
 CREATE VIEW CLUBS_STATISTICS AS 
 SELECT CLUBS.CLUB_NAME AS 'ÊËÓÁ',COUNT (PLAYERS.PLAYER_ID)AS '×ÈÑËÎ ÈÃÐÎÊÎÂ',
 AVG(PLAYERS.RATING) AS ' ÑÐÅÄÍÈÉ ÐÅÉÒÈÍÃ', NUM_WIN.WIN AS '×ÈÑËÎ ÌÅÄÀËÈÑÒÎÂ'
 
 FROM CLUBS,PLAYERS,
 (
SELECT CLUBS.CLUB_ID AS C,COUNT(PLAYERS.PLAYER_ID) AS WIN
FROM CLUBS,PLAYERS,PARTICIPATIONS
WHERE CLUBS.CLUB_ID=PLAYERS.CLUB_ID AND
PLAYERS.PLAYER_ID = PARTICIPATIONS.PLAYER_ID AND
PARTICIPATIONS.PLACE IN(1,2,3)
GROUP BY CLUBS.CLUB_ID
 )AS NUM_WIN
 WHERE PLAYERS.CLUB_ID=CLUBS.CLUB_ID AND
 CLUBS.CLUB_ID = NUM_WIN.C
 GROUP BY CLUBS.CLUB_ID,CLUBS.CLUB_NAME, NUM_WIN.WIN
 WITH CHECK OPTION

 GO
 
 SELECT * FROM CLUBS_STATISTICS



 ---------------------------------------------------------

 if OBJECT_ID('CLUBS_BEST_PLAYERS') IS NOT NULL
	 DROP VIEW CLUBS_BEST_PLAYERS 

 GO
 CREATE VIEW CLUBS_BEST_PLAYERS AS 
	SELECT CLUBS.CLUB_NAME AS 'ÊËÓÁ',PLAYERS.NAME AS ' ËÓ×ØÈÉ ÈÃÐÎÊÎÂ', PLAYERS.RATING AS 'ÐÅÉÒÈÍÃ'
		FROM
		PLAYERS
		INNER JOIN 
		CLUBS ON PLAYERS.CLUB_ID=CLUBS.CLUB_ID
		INNER JOIN
		(
		SELECT CLUBS.CLUB_ID AS CLUB, PLAYERS.PLAYER_ID AS PL
		FROM CLUBS JOIN PLAYERS 
		ON CLUBS.CLUB_ID =PLAYERS.CLUB_ID
		GROUP BY CLUBS.CLUB_ID, PLAYERS.PLAYER_ID,PLAYERS.RATING
		HAVING MAX(PLAYERS.RATING)=PLAYERS.RATING
		) AS BEST_PLAYERS
		ON CLUBS.CLUB_ID = BEST_PLAYERS.CLUB
		WHERE BEST_PLAYERS.PL=PLAYERS.PLAYER_ID+
		WITH CHECK OPTION
GO

SELECT * FROM CLUBS_BEST_PLAYERS


